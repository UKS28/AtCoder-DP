#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define rep(i, st, ed) for (int i = st; i < ed; i++)
// Approach:
// - dp[i][j] -> minmum weight obtain with i elements and j values (base case to obtain 0 value minimum weight will be 0
//  and to obtain value >0 with 0 elements )
// - iterate to each value and get maximum value whose weight is less than W

void solve()
{
    long long N, W;
    cin >> N >> W;
    vector<long long> weight(N), value(N);
    rep(i, 0, N)
    {
        cin >> weight[i] >> value[i];
    }

    vector<vector<long long>> dp(N + 1, vector<long long>(1e5 + 10, INT_MAX));

    for (int i = 0; i <= N; i++)
        dp[i][0] = 0;

    long long ans = 0;
    for (int i = 1; i <= N; i++)
    {
        for (int j = 1; j <= 100001; j++)
        {
            dp[i][j] = dp[i - 1][j];
            if (j >= value[i - 1])
                dp[i][j] = min(dp[i][j], dp[i - 1][j - value[i - 1]] + weight[i - 1]);

            if (i == N && dp[i][j] <= W)
            {
                ans = j;
            }
        }
    }

    cout << ans << endl;
}

int main()
{
    int tc;
    // cin >> tc;
    tc = 1;
    while (tc--)
    {
        solve();
    }
}
