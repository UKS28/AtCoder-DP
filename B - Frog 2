#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define rep(i, st, ed) for (int i = st; i < ed; i++)
// 1. all indexing that either it will be a 0 based or one based indexing
// 2. what dp[i] is signifying

void solve()
{
    int n, k;
    cin >> n >> k;

    vector<int> heights(n);
    for (int i = 0; i < n; i++)
        cin >> heights[i];

    vector<int> dp(n + 1, INT_MAX);
    // dp[i]-> the total minimum cost to reach a particular stone i
    // my answer will be dp[n]
    dp[0] = INT_MAX;
    dp[1] = 0;
    for (int i = 2; i <= n; i++)
    {
        // 0 based indexing of height thats why always decrement 1
        for (int j = 1; j <= k; j++)
            if (i - j > 0)
                dp[i] = min(dp[i], abs(heights[i - 1] - heights[i - j - 1]) + dp[i - j]);
    }
    cout << dp[n] << endl;
    return;
}

int main()
{
    int tc;
    tc = 1;
    // cin>>tc;
    while (tc--)
    {
        solve();
    }
}
