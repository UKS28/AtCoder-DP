#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define rep(i, st, ed) for (int i = st; i < ed; i++)
// 1. all indexing that either it will be a 0 based or 1 based indexing >1 based
// 2. what dp[i] is signifying=> done in code

void solve()
{
    int N, W;
    cin >> N >> W;
    vector<int> weight(N), value(N);
    rep(i, 0, N)
    {
        cin >> weight[i] >> value[i];
    }

    vector<vector<long long>> dp(N + 1, vector<long long>(W + 1));
    // dp[i][j]==> maximum value obtain till ith day considering maximum weight is j
    for (int i = 1; i <= N; i++)
    {
        for (int j = 1; j <= W; j++)
        {
            dp[i][j] = dp[i - 1][j];
            if (j >= weight[i - 1])
                dp[i][j] = max(dp[i][j], dp[i - 1][j - weight[i - 1]] + value[i - 1]);
        }
    }
    cout << dp[N][W] << endl;
}

int main()
{
    int tc;
    // cin >> tc;
    tc = 1;
    while (tc--)
    {
        solve();
    }
}
